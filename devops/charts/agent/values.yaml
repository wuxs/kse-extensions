global:
  namespace: "kubesphere-devops-system"

replicaCount: 1
autoscaling:
  enabled: false

image:
  registry: registry.cn-beijing.aliyuncs.com/kse
  controller:
    repository: devops-controller
    tag: v4.0.0
  apiserver:
    repository: devops-apiserver
    tag: v4.0.0
  tools:
    repository: devops-tools
    tag: v4.0.0
  pullPolicy: IfNotPresent

imagePullSecrets: []

gcJobs:
  # gcJobs.maxAge -- Max age from which `PipelineRun`s will be deleted
  maxAge: 168h
  # gcJobs.maxCount -- Max count from which `PipelineRun`s will be deleted
  maxCount: 30
  # gcJobs.schedule -- Cron expression to periodically delete `PipelineRun`s
  schedule: "0/30 * * * *"
  # gcJobs.failedJobsHistoryLimit -- Drives the failed jobs history limit
  failedJobsHistoryLimit: 1
  # gcJobs.successfulJobsHistoryLimit -- Drives the successful jobs history limit
  successfulJobsHistoryLimit: 3
  # gcJobs.concurrencyPolicy -- Drives the job's concurrency policy
  concurrencyPolicy: Forbid

authentication:
  # If not set, jwt tools will generate and set it automatically
  jwtSecret: "UDjssmmDgxZtkXVDSeFvBtsZeBSFWhJ6"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "devops"

apiserver:
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

controller:
  podAnnotations: {}
  podSecurityContext: {}
  # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

jenkins:
  enabled: true
  Master:
    Image: "registry.cn-beijing.aliyuncs.com/kse/devops-jenkins"
    ImageTag: "v4.0.0-2.346.3"
    resources:
      requests:
        cpu: 0.5
        memory: 6Gi
      limits:
        cpu: 2
        memory: 6Gi # Set same as requests.memory
  Persistence:
    size: 16Gi
  securityRealm:
    openIdConnect:
      # the kubesphere-core api used for jenkins OIDC
      # if want to access to jenkinsUI, the ksCoreApi must be specified and browser-accessible
      kubesphereCoreApi: "http://ks-apiserver.kubesphere-system.svc:30881"

argocd:
  enabled: true
  namespace: "argocd"
