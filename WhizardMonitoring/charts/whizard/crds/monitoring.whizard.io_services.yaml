
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: services.monitoring.whizard.io
spec:
  group: monitoring.whizard.io
  names:
    kind: Service
    listKind: ServiceList
    plural: services
    singular: service
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Service is the Schema for the monitoring service API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSpec defines the desired state of a Service
            properties:
              defaultTenantId:
                description: Default tenant ID to use when none is provided via a
                  header.
                type: string
              remoteQuery:
                description: RemoteQuery is the remote query configuration and the
                  remote target should have prometheus-compatible Query APIs. If not
                  configured, the Gateway will proxy all read requests through the
                  QueryFrontend to the Query, If configured, the Gateway will proxy
                  metrics read requests through the QueryFrontend to the remote target,
                  but proxy rules read requests directly to the Query.
                properties:
                  basicAuth:
                    description: The HTTP basic authentication credentials for the
                      targets.
                    properties:
                      password:
                        description: The secret in the service monitor namespace that
                          contains the password for authentication.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      username:
                        description: The secret in the service monitor namespace that
                          contains the username for authentication.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  bearerToken:
                    description: The bearer token for the targets.
                    type: string
                  name:
                    type: string
                  url:
                    type: string
                required:
                - url
                type: object
              remoteWrites:
                description: RemoteWrites is the list of remote write configurations.
                  If it is configured, its targets will receive write requests from
                  the Gateway and the Ruler.
                items:
                  description: RemoteWriteSpec defines the remote write configuration.
                  properties:
                    basicAuth:
                      description: The HTTP basic authentication credentials for the
                        targets.
                      properties:
                        password:
                          description: The secret in the service monitor namespace
                            that contains the password for authentication.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        username:
                          description: The secret in the service monitor namespace
                            that contains the username for authentication.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    bearerToken:
                      description: The bearer token for the targets.
                      type: string
                    headers:
                      additionalProperties:
                        type: string
                      description: Custom HTTP headers to be sent along with each
                        remote write request.
                      type: object
                    name:
                      type: string
                    remoteTimeout:
                      description: Timeout for requests to the remote write endpoint.
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    url:
                      type: string
                  required:
                  - url
                  type: object
                type: array
              retention:
                description: Retention configs how long to retain samples
                properties:
                  retention1h:
                    description: Retention1h specifies how long to retain samples
                      of 1h resolution in bucket
                    pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                    type: string
                  retention5m:
                    description: Retention5m specifies how long to retain samples
                      of 5m resolution in bucket
                    pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                    type: string
                  retentionRaw:
                    description: RetentionRaw specifies how long to retain raw samples
                      in bucket
                    pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                    type: string
                type: object
              storage:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                type: object
              tenantHeader:
                description: HTTP header to determine tenant for remote write requests.
                type: string
              tenantLabelName:
                description: Label name through which the tenant will be announced.
                type: string
            type: object
          status:
            description: ServiceStatus defines the observed state of Service
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
