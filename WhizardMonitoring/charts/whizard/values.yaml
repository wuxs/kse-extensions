# Default values for whizard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

namespaceOverride: ""

global:

  whizard:
    image:
      repository: kubesphere/thanos
      tag: v0.32.6
    log:
      level: info             # Possible options: error, warn, info, debug.
      format: logfmt          # Possible options: logfmt or json.
  imagePullSecrets: []

monitoring:
  enabled: false
  components:
    - compactor
    - query
    - ingester
    - store
    - ruler

# Create a Storage instance
storage:
  create: false
  blockManager:
    enable: true
    ## If null or unset, the global.whizardImage is used.
    image: null
    # repository: thanosio/thanos
    # tag: v0.28.0
    serviceAccountName: ""          # If null or unset, the created controllerManager serviceAccountName is used.
    gc:
      image:
        repository: kubesphere/whizard-monitoring-block-manager
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
  S3: {}

## Manages Service, Query, QueryFrontend, Router, Ingester, Store, Compactor and Ruler instances and components
##
controllerManager:
  enabled: true

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

  image:
    repository: kubesphere/whizard-controller-manager
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  rbac:
    create: true

  config:
    create: true

    storage:
      blockManager:
        enable: true
        ## If null or unset, the global.whizardImage is used.
        image: null
        # repository: thanosio/thanos
        # tag: v0.28.0
        serviceAccountName: ""          # If null or unset, the created controllerManager serviceAccountName is used.
        gc:
          image:
            repository: kubesphere/whizard-monitoring-block-manager
            # Overrides the image tag whose default is the chart appVersion.
            tag: ""

    gateway:
      image:
        repository: kubesphere/whizard-monitoring-gateway
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""

      replicas: 2
      resources:
        limits:
          cpu: "2"
          memory: 4Gi
        requests:
          cpu: 50m
          memory: 50Mi

    router:
      ## If null or unset, the global.whizardImage is used.
      image: null
      # repository: thanosio/thanos
      # tag: v0.28.0

      replicas: 2

      replicationFactor: 1
      resources:
        limits:
          cpu: "2"
          memory: 4Gi
        requests:
          cpu: 50m
          memory: 50Mi

    queryFrontend:
      ## If null or unset, the global.whizardImage is used.
      image: null
      # repository: thanosio/thanos
      # tag: v0.28.0

      replicas: 2
      resources:
        limits:
          cpu: "2"
          memory: 4Gi
        requests:
          cpu: 50m
          memory: 50Mi

      cacheConfig: {}

    query:
      ## If null or unset, the global.whizardImage is used.
      image: null
      #  repository: kubesphere/thanos
      #  tag: v0.30.2

      replicas: 3
      resources:
        limits:
          cpu: "2"
          memory: 4Gi
        requests:
          cpu: 50m
          memory: 50Mi

      additionalFlags:
      - --query.max-concurrent=200

      envoy:
        image:
          repository: envoyproxy/envoy
          tag: v1.20.2

    ingester:
      ## If null or unset, the global.whizardImage is used.
      image: null
      # repository: thanosio/thanos
      # tag: v0.28.0

      replicas: 2
      resources:
        limits:
          cpu: "4"
          memory: 16Gi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        fsGroup: 0

      ## how long to retain raw samples on local storage.
      localTsdbRetention: 7d

      dataVolume:
        emptyDir: {}
        # persistentVolumeClaim:
        #   spec:
        #     resources:
        #       requests:
        #         storage: 20Gi
        # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
        # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
        # persistentVolumeClaimRetentionPolicy:
        #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether to delete pvc when statefulset is deleted.
        #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether to delete pvc when statefulset is scaled down.


      additionalFlags:
      - --tsdb.out-of-order.time-window=10m         # Receive: Added parameter `--tsdb.out-of-order.time-window` to set time window for experimental out-of-order samples ingestion. Disabled by default (set to 0s). Please note if you enable this option and you use compactor, make sure you set the `--enable-vertical-compaction` flag, otherwise you might risk compactor halt.

      # if disableTSDBCleanup is false, will delete the blocks
      # that belong to deleted tenants in the data directory of ingester TSDB.
      disableTSDBCleanup: true
      tsdbCleanupImage:
        repository: bash
        tag: 5.1.16

    store:
      ## If null or unset, the global.whizardImage is used.
      image: null
      # repository: thanosio/thanos
      # tag: v0.28.0
      resources:
        limits:
          cpu: "1"
          memory: 4Gi
        requests:
          cpu: 100m
          memory: 500Mi
      securityContext:
        fsGroup: 0
      indexCacheConfig: {}

      timeRanges:
      - maxTime: -36h

      additionalFlags:
      - --web.disable                   # Disable Block Viewer UI.
      - --no-cache-index-header         # Support disabling cache index header file. When toggled, Stores can run without needing persistent disks.
      # - --min-time=-14d               # Optional, time based partitioning

      dataVolume:
        emptyDir: {}
        # persistentVolumeClaim:
        #   spec:
        #     resources:
        #       requests:
        #         storage: 20Gi
        # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
        # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
        # persistentVolumeClaimRetentionPolicy:
        #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether to delete pvc when statefulset is deleted.
        #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether to delete pvc when statefulset is scaled down.

    compactor:
      ## If null or unset, the global.whizardImage is used.
      image: null
      # repository: thanosio/thanos
      # tag: v0.28.0
      retention:
        retentionRaw: 60d
        retention5m: 180d
        retention1h: 360d
      additionalFlags:
      - --block-files-concurrency=20
      - --compact.blocks-fetch-concurrency=5
      - --web.disable                                 # Disable Block Viewer UI.
      - --compact.enable-vertical-compaction

      resources:
        limits:
          cpu: "2"
          memory: 4Gi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        fsGroup: 0
      dataVolume:
        emptyDir: {}
        # persistentVolumeClaim:
        #   spec:
        #     resources:
        #       requests:
        #         storage: 20Gi
        # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
        # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
        # persistentVolumeClaimRetentionPolicy:
        #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether to delete pvc when statefulset is deleted.
        #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether to delete pvc when statefulset is scaled down.

    ruler:
      ## If null or unset, the global.whizardImage is used.
      image: null
      # repository: thanosio/thanos
      # tag: v0.28.0

      replicas: 1
      resources:
        limits:
          cpu: "2"
          memory: 4Gi
        requests:
          cpu: 50m
          memory: 50Mi

      shards: 1

      evaluationInterval: 1m
      ruleSelectors: []
      alertmanagersUrl: []

      securityContext:
        fsGroup: 0

      dataVolume:
        emptyDir: 
          sizeLimit: 500Mi            # The size limit of emptyDir volume.

      prometheusConfigReloader:
        image:
          repository: kubesphere/prometheus-config-reloader
          tag: v0.55.1

      writeProxy:
        image:
          repository: kubesphere/cortex-tenant
          tag: v1.7.2

adapter:
  enabled: false

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  rbac:
    create: true

  image:
    repository: kubesphere/whizard-adapter
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  ## If null or unset, the enabled Service instance is used.
  defaultServiceReference: null
    # namespace:
    # name:
  ## If null or unset, the default Storage name is used.
  defaultStorageReference: null
    # namespace:
    # name:
  kubesphereAdapter:
    enabled: true
  web:
    enabled: true

# Deploy a Service instance
service:
  enabled: true

  tenantHeader: cluster
  defaultTenantId: unknown
  tenantLabelName: cluster

  ## If null or unset, the value is determined based on the created Storage instance.
  storage: null
  # namespace:
  # name:

  ## Set remote writes
  remoteWrites:
  # - name: remote
  #   url: remote_storage_address

  ## Set remote query
  remoteQuery:
    # url: remote_query_address

# Deploy an Gateway instance
gateway:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  image:
    repository: kubesphere/whizard-monitoring-gateway
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""


  resources: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  enabledTenantsAdmission: true
  nodePort: 0

# Deploy an Query instance
query:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  ## If null or unset, the global.whizardImage is used.
  image: null
    # repository: thanosio/thanos
    # tag: v0.28.0

  promqlEngine: thanos

  resources: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  replicaLabelNames:
  - prometheus_replica
  - receive_replica
  - ruler_replica

  genSignedCert: false
  httpServerTLSConfig: {}

  additionalFlags: []

  envoy:
    image:
      repository: envoyproxy/envoy
      tag: v1.20.2
    resources: {}

# Deploy an Router instance
router:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  ## If null or unset, the global.whizardImage is used.
  image: null
    # repository: thanosio/thanos
    # tag: v0.28.0


  resources: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  genSignedCert: false
  httpServerTLSConfig: {}

  additionalFlags: []

# Deploy an QueryFrontend instance
queryFrontend:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  ## If null or unset, the global.whizardImage is used.
  image: null
    # repository: thanosio/thanos
    # tag: v0.28.0


  resources: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  cacheConfig: {}
  genSignedCert: false
  httpServerTLSConfig: {}

  additionalFlags:
  - --no-query-range.align-range-with-step          # Disable query-range.align-range-with-step, the incoming query parameter remains the same (as required by the frontend), although it may reduce the cache-ability.

# Deploy a Ruler instance
ruler:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  ## If null or unset, the global.whizardImage is used.
  image: null
    # repository: thanosio/thanos
    # tag: v0.28.0


  resources: {}
  securityContext:
    fsGroup: 0
  nodeSelector: {}
  tolerations: []
  affinity: {}

  replicas: 1

  shards: 1

  tenant: ''

  dataVolume:
    emptyDir: {}
    # persistentVolumeClaim:
    #   spec:
    #     resources:
    #       requests:
    #         storage: 20Gi
    # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
    # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
    # persistentVolumeClaimRetentionPolicy:
    #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether delete pvc when statefulset is deleted.
    #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether delete pvc when statefulset is scaled down.

  evaluationInterval: 1m

  additionalFlags: []

  ruleSelectors:
  - matchExpressions:
    - key: alerting.kubesphere.io/rule_level
      operator: In
      values:
      - global
  ruleNamespaceSeletor:
    matchExpressions:
    - key: kubesphere.io/namespace
      operator: In
      values:
      - kubesphere-monitoring-system

  ## If null or unset, the global.alertmanagersUrl is used.
  alertmanagersUrl:
  - dnssrv+http://alertmanager-operated.kubesphere-monitoring-system.svc:9093

# Deploy an Ingester instance
ingester:
  enabled: true

  # add `"monitoring.whizard.io/soft-tenant"="true"` label for the soft tenant creation ingester
  labels:
    "monitoring.whizard.io/soft-tenant": "true"

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  ## If null or unset, the global.whizardImage is used.
  image: null
    # repository: thanosio/thanos
    # tag: v0.28.0


  resources: {}
  securityContext:
    fsGroup: 0
  nodeSelector: {}
  tolerations: []
  affinity: {}

  tenants: []

  logLevel: info
  logFormat: logfmt

  dataVolume:
    emptyDir: {}                    # Use emptyDir as the default dataVolume.
    # persistentVolumeClaim:
    #   spec:
    #     resources:
    #       requests:
    #         storage: 20Gi
    # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
    # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
    # persistentVolumeClaimRetentionPolicy:
    #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether delete pvc when statefulset is deleted.
    #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether delete pvc when statefulset is scaled down.

  additionalFlags: []
