apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: post-install-job
        image: bitnami/kubectl
        command: 
          - /bin/sh
          - -c
          - |
            kubectl patch mutatingwebhookconfigurations istio-sidecar-injector-1-16-5-extension-servicemesh --type='json' -p='[{ "op": "remove", "path": "/webhooks/1/objectSelector/matchExpressions/1" }]';
            kubectl label namespaces istio-system istio-injection=disabled --overwrite;
            kubectl get namespaces -o json | jq -r '.items[] | select(.metadata.name | startswith("extension-") or startswith("kube-") or startswith("kubesphere-") ) | .metadata.name' | xargs -I {} kubectl label namespace {} istio-injection=disabled --overwrite;

